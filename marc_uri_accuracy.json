[
  {
    "op": "core/column-addition",
    "description": "Create column LCCN at index 3 based on column subfield 0 using expression grel:substring(value,36)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "LCCN",
    "columnInsertIndex": 3,
    "baseColumnName": "subfield 0",
    "expression": "grel:substring(value,36)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column VIAF URI Match at index 4 by fetching URLs based on column LCCN using expression grel:\"http://viaf.org/viaf/lccn/\" + value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "newColumnName": "VIAF URI Match",
    "columnInsertIndex": 4,
    "baseColumnName": "LCCN",
    "urlExpression": "grel:\"http://viaf.org/viaf/lccn/\" + value",
    "onError": "set-to-blank",
    "delay": 300,
    "cacheResponses": false
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column VIAF URI Match using expression grel:substring(value,11,15) + substring(value,16,-1)",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "VIAF URI Match",
    "expression": "grel:substring(value,11,15) + substring(value,16,-1)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Flag for review at index 6 based on column subfield 1 using expression grel:if(cells[\"VIAF URI Match\"].value == cells[\"subfield 1\"].value, 'OK', 'Flag')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "newColumnName": "Flag for review",
    "columnInsertIndex": 6,
    "baseColumnName": "subfield 1",
    "expression": "grel:if(cells[\"VIAF URI Match\"].value == cells[\"subfield 1\"].value, 'OK', 'Flag')",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column subfield 1 name at index 6 by fetching URLs based on column subfield 1 using expression grel:value + \"/viaf.xml\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "newColumnName": "subfield 1 name",
    "columnInsertIndex": 6,
    "baseColumnName": "subfield 1",
    "urlExpression": "grel:value + \"/viaf.xml\"",
    "onError": "set-to-blank",
    "delay": 300,
    "cacheResponses": false
  },
  {
    "op": "core/column-addition",
    "description": "Create column missing subfield 0 value at index 7 based on column subfield 1 name using expression grel:value.parseHtml().select('ns1|source').toString()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "newColumnName": "missing subfield 0 value",
    "columnInsertIndex": 7,
    "baseColumnName": "subfield 1 name",
    "expression": "grel:value.parseHtml().select('ns1|source').toString()",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column missing subfield 0 value using expression grel:substring(value, indexOf(value, 'LC'))",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "missing subfield 0 value",
    "expression": "grel:substring(value, indexOf(value, 'LC'))",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column missing subfield 0 value using expression grel:substring(value, 0, indexOf(value, '<'))",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "missing subfield 0 value",
    "expression": "grel:substring(value, 0, indexOf(value, '<'))",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column missing subfield 0 value using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "missing subfield 0 value",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column missing subfield 0 value using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "missing subfield 0 value",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column missing subfield 0 value using expression grel:substring(value, 3)",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "missing subfield 0 value",
    "expression": "grel:substring(value, 3)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column missing subfield 0 value using expression grel:replace(value, ' ', '')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "missing subfield 0 value",
    "expression": "grel:replace(value, ' ', '')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column missing subfield 0 value using expression grel:\"http://id.loc.gov/authorities/names/\" + value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        },
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "missing subfield 0 value",
          "omitBlank": false,
          "type": "list",
          "columnName": "missing subfield 0 value"
        }
      ]
    },
    "columnName": "missing subfield 0 value",
    "expression": "grel:\"http://id.loc.gov/authorities/names/\" + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subfield 1 name using expression grel:value.parseHtml().select('ns1|mainheadings').toString()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "subfield 1 name",
    "expression": "grel:value.parseHtml().select('ns1|mainheadings').toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subfield 1 name using expression grel:value.parseHtml().select('ns1|text')[0].toString()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "subfield 1 name",
    "expression": "grel:value.parseHtml().select('ns1|text')[0].toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subfield 1 name using expression grel:substring(value,11)",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "subfield 1 name",
    "expression": "grel:substring(value,11)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subfield 1 name using expression grel:substring(value,0,-11)",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "LCCN",
          "omitBlank": false,
          "type": "list",
          "columnName": "LCCN"
        }
      ]
    },
    "columnName": "subfield 1 name",
    "expression": "grel:substring(value,0,-11)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Count at index 9 based on column Flag for review using expression grel:\"Flag: \" + facetCount(\"Flag\", \"value\", \"Flag for review\") + \"; \" + \"OK: \" + facetCount(\"OK\", \"value\", \"Flag for review\") + \"; \" + \"Null: \" + facetCount(null, \"value\", \"Flag for review\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Count",
    "columnInsertIndex": 9,
    "baseColumnName": "Flag for review",
    "expression": "grel:\"Flag: \" + facetCount(\"Flag\", \"value\", \"Flag for review\") + \"; \" + \"OK: \" + facetCount(\"OK\", \"value\", \"Flag for review\") + \"; \" + \"Null: \" + facetCount(null, \"value\", \"Flag for review\")",
    "onError": "set-to-blank"
  }
]
