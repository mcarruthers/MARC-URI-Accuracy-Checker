[
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column LC Name at index 3 by fetching URLs based on column subfield 0 using expression grel:\"http://viaf.org/processed/LC|\" + substring(value,36,get(value)) + \"?httpAccept=text/xml\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "LC Name",
    "columnInsertIndex": 3,
    "baseColumnName": "subfield 0",
    "urlExpression": "grel:\"http://viaf.org/processed/LC|\" + substring(value,36,get(value)) + \"?httpAccept=text/xml\"",
    "onError": "set-to-blank",
    "delay": 300
  },
  {
    "op": "core/column-addition",
    "description": "Create column Personal at index 4 based on column LC Name using expression grel:value.parseHtml().select('mx|datafield[tag~=100]')[0].htmlText()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Personal",
    "columnInsertIndex": 4,
    "baseColumnName": "LC Name",
    "expression": "grel:value.parseHtml().select('mx|datafield[tag~=100]')[0].htmlText()",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Corporate at index 4 based on column LC Name using expression grel:value.parseHtml().select('mx|datafield[tag~=110]')[0].htmlText()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Corporate",
    "columnInsertIndex": 4,
    "baseColumnName": "LC Name",
    "expression": "grel:value.parseHtml().select('mx|datafield[tag~=110]')[0].htmlText()",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column LC Name",
    "columnName": "LC Name"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Personal using expression grel:cells[\"Corporate\"].value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "Corporate",
          "omitBlank": false,
          "type": "list",
          "columnName": "Corporate"
        }
      ]
    },
    "columnName": "Personal",
    "expression": "grel:cells[\"Corporate\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Corporate",
    "columnName": "Corporate"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Personal to LC Name",
    "oldColumnName": "Personal",
    "newColumnName": "LC Name"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column MARC field using expression grel:substring(value,9,indexOf(value,\"|0\"))",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "MARC field",
    "expression": "grel:substring(value,9,indexOf(value,\"|0\"))",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column MARC field using expression grel:substring(value,0,indexOf(value,\"|1\"))",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "MARC field",
    "expression": "grel:substring(value,0,indexOf(value,\"|1\"))",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column VIAF Name at index 5 by fetching URLs based on column subfield 1 using expression grel:value + \"/viaf.xml\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "VIAF Name",
    "columnInsertIndex": 5,
    "baseColumnName": "subfield 1",
    "urlExpression": "grel:value + \"/viaf.xml\"",
    "onError": "set-to-blank",
    "delay": 300
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column VIAF Name using expression grel:value.parseHtml().select('ns1|text')[0].toString()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "VIAF Name",
    "expression": "grel:value.parseHtml().select('ns1|text')[0].toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column VIAF Name using expression grel:substring(value,12,-12)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "VIAF Name",
    "expression": "grel:substring(value,12,-12)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-move",
    "description": "Move column subfield 0 to position 3",
    "columnName": "subfield 0",
    "index": 3
  },
  {
    "op": "core/column-move",
    "description": "Move column VIAF Name to position 4",
    "columnName": "VIAF Name",
    "index": 4
  },
  {
    "op": "core/column-move",
    "description": "Move column VIAF Name to position 3",
    "columnName": "VIAF Name",
    "index": 3
  }
]